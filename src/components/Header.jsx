import jsPDF from 'jspdf';


export default function Header ({resumeBodyRef}) {
    return (
        <header className="header">
            <div>
                <h1>CV Application</h1>
                <p>Build Your CV In Minutes</p>
            </div>
            <DownloadButton startDownload={resumeBodyRef} />
        </header>
    )
}

function DownloadButton ({startDownload}) {
    
    const handeDownloadePDF = () => {
        const resumeElement = startDownload.current;
        if (!resumeElement) {
            alert("Resume content not found. Please ensure the CV is rendered.");
            return;
        }

        const pdf = new jsPDF('p', 'mm', 'a4'); // Portrait, mm units, A4 size
        
        // Calculate usable width for content on the PDF page.
        // A4 is 210mm wide. Let's use 10mm margins on each side.
        const pdfWidth = pdf.internal.pageSize.getWidth();
        const margin = 10; // mm
        const usablePdfWidth = pdfWidth - (2 * margin); // 190mm for A4
        const htmlOptions = {
            callback: function (pdf) {
                pdf.save("Your_CV.pdf");
            },
            margin: [margin, margin, margin, margin], // Top, Right, Bottom, Left margins
            autoPaging: 'slice', // Better for complex HTML layouts across pages
            html2canvas: {
                scale: 0.22, // Adjust this value (e.g., 0.6 to 1.0) based on how big/small the content appears.
                            // A smaller scale makes the content smaller on the PDF page.
                            // This essentially downscales the image generated by html2canvas before it's added to the PDF.
            },
            // 'width' option for html() method specifies the width of the HTML content on the PDF.
            // It will try to render the HTML to fit this width.
            width: usablePdfWidth // Render the HTML content into this width (in mm) on the PDF.
        };

        // Render the HTML element to PDF
        pdf.html(resumeElement, htmlOptions);
    }
    
    
          return (
            <div>
              <button
                onClick={handeDownloadePDF}
                style={{ marginTop: '10px', padding: '10px 15px', cursor: 'pointer' }}
              >
                Download as PDF
              </button>
            </div>
          );
}